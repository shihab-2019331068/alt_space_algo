{
   "Main template": {
      "prefix": "aa",
      "body": [
         "#include<bits/stdc++.h>",
         "",
         "using namespace std;",
         "",
         "#define fastio            ios_base::sync_with_stdio(false); cin.tie(NULL);",
         "#define aa                auto",
         "#define cn                const",
         "#define ll                long long",
         "#define ld                long double",
         "#define fr                first",
         "#define sc                second",
         "#define pll               pair<ll,ll>",
         "#define tll               tuple<ll,ll,ll>",
         "#define vll               vector<ll>",
         "#define bp(x)             __builtin_popcountll(x)",
         "#define all(a)            a.begin(),a.end()",
         "#define arr(a)            a.rbegin(),a.rend()",
         "#define cb(a,i)           (a>>i&1)",
         "#define mp(a,b)           make_pair(a,b)",
         "#define pb(a)             push_back(a)",
         "#define ve                vector",
         "",
         "",
         "#define db(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); cerr<<\"\\n\";}",
         "void err(istream_iterator<string> it) {}",
         "template<typename T, typename... Args>",
         "void err(istream_iterator<string> it, T a, Args... args) {",
         "   cerr << *it << \"=\" << a << \" ! \";",
         "   err(++it, args...);",
         "}",
         "",
         "cn ll N=5e5+7,N1=25,inf=2e18;",
         "cn ld eps=1e-8;",
         "cn ll M=1e9+7;",
         "//cn ll M=998244353;",
         "",
         "int main(){",
         "   $0",
         "}",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
         "",
      ],
   },
    "input": {
    	"prefix": "i",
    	"body": [
         "cin>>$0",
    	],
    },
    "Output": {
      "prefix": "o",
      "body": [
         "cout<<$0"
      ],
    },
    "for loop": {
    	"prefix": "f",
    	"body": [
         "for($1=$2; $1<$3; $1++)",
    	],
    },
    "string": {
    	"prefix": "g",
    	"body": [
         "string$0",
    	],
    },
    "memset": {
    	"prefix": "mm",
    	"body": [
         "memset($1,$2,sizeof($1));",
    	],
    },
    "next line": {
    	"prefix": "nl",
    	"body": [
         "<<\"\\n\"",
    	],
    },
    "my if": {
    	"prefix": "if",
    	"body": [
         "if($1)",
    	],
    },
    "return": {
    	"prefix": "r",
    	"body": [
         "return",
    	],
    },
    "min": {
    	"prefix": "mn",
    	"body": [
         "min($1)",
    	],
    },
    "min_tree": {
    	"prefix": "mtree",
    	"body": [
          "ll rnq(ll l,ll r,ll u=1,ll b=1,ll e=m-1){",
          "   if(r<b or e<l) return inf;",
          "   if(l<=b and e<=r) return T[u];|",
          "   ll m=b+e>>1;",
          "   return min(rnq(l,r,u<<1,b,m),rnq(l,r,u<<1|1,m+1,e));",
          "}",
          "",
          "void upd(ll i,ll v,ll u=1,ll b=1,ll e=m-1){",
          "   if(i<b or e<i) return;",
          "   if(i<=b and e<=i){T[u]+=v; return;}",
          "   ll m=b+e>>1;",
          "   upd(i,v,u<<1,b,m); upd(i,v,u<<1|1,m+1,e);",
          "   T[u]=min(T[u<<1],T[u<<1|1]);",
          "}$1",

    	],
    },
    "check": {
    	"prefix": "chk",
    	"body": [
         "ll chk(){",
         "   $0",
         "}",
    	],
    },
    "sex": {
    	"prefix": "sex",
    	"body": [
         "ll sex(){",
         "   $0",
         "}",
    	],
    },
    "insert": {
    	"prefix": "in",
    	"body": [
         "insert($0)",
    	],
    },
    "max": {
    	"prefix": "mx",
    	"body": [
         "max($0)",
    	],
    },
    "setprecision": {
    	"prefix": "stp",
    	"body": [
         "cout<<fixed<<setprecision($1);",
    	],
    },
    "fin": {
    	"prefix": "fin",
    	"body": [
         "for(i=1; i<=$1; i++)",
    	],
    },
    "moduler  arithmetic": {
    	"prefix": "mod",
    	"body": [
          "ll bmd(ll n,ll k){",
          "   return p?bmd(a*a%M,p>>1)*(p&1?a:1)%M:1;",
          "}",
          "ll inv(ll n){return bmd(n,M-2);}",
          "ll mul(aa a,aa b){return a*1ll*b%M;}",
          "ll add(aa a,aa b){a+=b; return a<M?a:a-M;}",
          "ll dvd(aa a,aa b){return mul(a,inv(b));}",
          "ll sub(aa a,aa b){return add(a,M-b);}",

    	],
    },
    "dsu": {
    	"prefix": "dsu",
    	"body": [
          "struct DSU{",
          "   map<ll,ll> p,h;",
          "   ll com;",
          "   DSU(){com=n;}",
          "   ll get(ll x){",
          "      if(!p.count(x)) return p[x]=x;",
          "      return p[x]=p[x]==x?x:get(p[x]);",
          "   }",
          "   ll unite(ll u,ll v){",
          "      u=get(u); v=get(v);",
          "      if(u==v) return 0;",
          "      if(!h.count(u)) h[u]=1;",
          "      if(!h.count(v)) h[v]=1;",
          "      if(h[u]<h[v]) swap(u,v);",
          "      p[v]=u; h[u]+=h[v]; h[v]=0;",
          "      --com;",
          "      return 1;",
          "   }",
          "};",
    	],
    },
    "binary search": {
    	"prefix": "bs",
    	"body": [
          "ll b_s(ll l,ll r){",
          "   ll m;$1",
          "   for(; l<r; ){",
          "      m=l+r>>1;",
          "      if(chk(m)) r=m;",
          "      else l=m+1;",
          "   }",
          "   return l;",
          "}",
    	],
    }
    


}
